{"version":3,"sources":["router.js"],"names":["Router","options","settings","_getSettings","notFoundHandler","page404","mode","window","history","pushState","root","_trimSlashes","beforeHook","hooks","before","securityHook","secure","routes","length","_this","forEach","route","add","rule","handler","_pageState","_currentPage","_skipCheck","_action","_historyStack","_historyIdx","_historyState","Page","uri","query","params","state","prototype","defaults","page","console","error","message","key","Object","assign","_getHistoryFragment","fragment","decodeURI","location","pathname","replace","_getHashFragment","hash","substr","_getFragment","path","toString","_page404","_parseRouteRule","RegExp","_parseQuery","_query","_queryString","split","row","parts","undefined","decodeURIComponent","_getHistoryQuery","search","_getHashQuery","index","indexOf","_getQuery","push","remove","param","some","i","splice","reset","removeUriListener","_pushHistory","_unloadCallback","asyncRequest","result","Promise","resolve","unloadCb","reject","_findRoute","match","shift","apply","onbeforeunload","ev","returnValue","_treatAsync","then","_processUri","bind","catch","_resetState","navigateTo","_current","call","check","addUriListener","onpopstate","onhashchange","redirectTo","silent","replaceState","refresh","back","go","forward","count"],"mappings":"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","file":"router.5199464d.js","sourceRoot":"..","sourcesContent":["function Router(options) {\n    var settings = this._getSettings(options);\n\n\n    this.notFoundHandler = settings.page404;\n    this.mode = (!window.history || !window.history.pushState) ? \"hash\" : settings.mode;\n    this.root = settings.root === \"/\" ? \"/\" : \"/\" + this._trimSlashes(settings.root) + \"/\";\n    this.beforeHook = settings.hooks.before;\n    this.securityHook = settings.hooks.secure;\n\n    this.routes = [];\n    if (settings.routes && settings.routes.length > 0) {\n        var _this = this;\n        settings.routes.forEach(function (route) {\n            _this.add(route.rule, route.handler, route.options);\n        });\n    }\n\n    this._pageState = null;\n    this._currentPage = null;\n    this._skipCheck = false;\n    this._action = null;\n\n    if (this.mode === \"hash\") {\n        this._historyStack = [];\n        this._historyIdx = 0;\n        this._historyState = \"add\"\n    }\n\n    return this;\n}\n\n/**\n * Define Router Page\n *\n * @param {string} uri\n * @param {object} query\n * @param {Array} params\n * @param {object} state\n * @param {object} options\n *\n * @constructor\n */\nRouter.Page = function (uri, query, params, state, options) {\n    this.uri = uri || \"\";\n    this.query = query || {};\n    this.params = params || [];\n    this.state = state || null;\n    this.options = options || {};\n};\n\n/**\n * Sanitize options and add default values\n *\n * @param {object} options\n * @returns {object}\n * @private\n */\nRouter.prototype._getSettings = function (options) {\n    var settings = {};\n    var defaults = {\n        routes: [],\n        mode: \"history\",\n        root: \"/\",\n        hooks: {\n            \"before\": function () {\n            },\n            \"secure\": function () {\n                return true;\n            }\n        },\n        page404: function (page) {\n            console.error({\n                page: page,\n                message: \"404. Page not found\"\n            });\n        }\n    };\n\n    options = options || {};\n    [\"routes\", \"mode\", \"root\", \"page404\"].forEach(function (key) {\n        settings[key] = options[key] || defaults[key];\n    });\n\n    settings.hooks = Object.assign({}, defaults.hooks, options.hooks || {});\n\n    return settings;\n};\n\n/**\n * Get URI for Router \"history\" mode\n *\n * @private\n * @returns {string}\n */\nRouter.prototype._getHistoryFragment = function () {\n    var fragment = decodeURI(window.location.pathname);\n    if (this.root !== \"/\") {\n        fragment = fragment.replace(this.root, \"\");\n    }\n    return this._trimSlashes(fragment);\n};\n\n/**\n * Get URI for router \"hash\" mode\n *\n * @private\n * @returns {string}\n */\nRouter.prototype._getHashFragment = function () {\n    var hash = window.location.hash.substr(1).replace(/(\\?.*)$/, \"\");\n    return this._trimSlashes(hash);\n};\n\n/**\n * Get current URI\n *\n * @private\n * @returns {string}\n */\nRouter.prototype._getFragment = function () {\n    if (this.mode === \"history\") {\n        return this._getHistoryFragment();\n    } else {\n        return this._getHashFragment();\n    }\n};\n\n/**\n * Trim slashes for path\n *\n * @private\n * @param {string} path\n * @returns {string}\n */\nRouter.prototype._trimSlashes = function (path) {\n    if (typeof path !== \"string\") {\n        return \"\";\n    }\n    return path.toString().replace(/\\/$/, \"\").replace(/^\\//, \"\");\n};\n\n/**\n * 404 Page Handler\n *\n * @private\n */\nRouter.prototype._page404 = function (path) {\n    this._currentPage = new Router.Page(path);\n    this.notFoundHandler(path);\n};\n\n/**\n * Convert the string route rule to RegExp rule\n *\n * @param {string} route\n * @returns {RegExp}\n * @private\n */\nRouter.prototype._parseRouteRule = function (route) {\n    if (typeof route !== \"string\") {\n        return route;\n    }\n    var uri = this._trimSlashes(route);\n    var rule = uri\n        .replace(/([\\\\\\/\\-\\_\\.])/g, \"\\\\$1\")\n        .replace(/\\{[a-zA-Z]+\\}/g, \"(:any)\")\n        .replace(/\\:any/g, \"[\\\\w\\\\-\\\\_\\\\.]+\")\n        .replace(/\\:word/g, \"[a-zA-Z]+\")\n        .replace(/\\:num/g, \"\\\\d+\");\n\n    return new RegExp(\"^\" + rule + \"$\", \"i\");\n};\n\n/**\n * Parse query string and return object for it\n *\n * @param {string} query\n * @returns {object}\n * @private\n */\nRouter.prototype._parseQuery = function (query) {\n    var _query = {};\n    if (typeof query !== \"string\") {\n        return _query;\n    }\n\n    if (query[0] === \"?\") {\n        query = query.substr(1);\n    }\n\n    this._queryString = query;\n    query.split(\"&\").forEach(function (row) {\n        var parts = row.split(\"=\");\n        if (parts[0] !== \"\") {\n            if (parts[1] === undefined) {\n                parts[1] = true;\n            }\n            _query[decodeURIComponent(parts[0])] = parts[1];\n        }\n    });\n    return _query;\n};\n\n/**\n * Get query for `history` mode\n *\n * @returns {Object}\n * @private\n */\nRouter.prototype._getHistoryQuery = function () {\n    return this._parseQuery(window.location.search);\n};\n\n/**\n * Get query for `hash` mode\n *\n * @returns {Object}\n * @private\n */\nRouter.prototype._getHashQuery = function () {\n    var index = window.location.hash.indexOf(\"?\");\n    var query = (index !== -1) ? window.location.hash.substr(index) : \"\";\n    return this._parseQuery(query);\n};\n\n/**\n * Get query as object\n *\n * @private\n * @returns {Object}\n */\nRouter.prototype._getQuery = function () {\n    if (this.mode === \"history\") {\n        return this._getHistoryQuery();\n    } else {\n        return this._getHashQuery();\n    }\n};\n\n/**\n * Add route to routes list\n *\n * @param {string|RegExp} rule\n * @param {function} handler\n * @param {{}} options\n * @returns {Router}\n */\nRouter.prototype.add = function (rule, handler, options) {\n    this.routes.push({\n        rule: this._parseRouteRule(rule),\n        handler: handler,\n        options: options\n    });\n    return this;\n};\n\n/**\n * Remove a route from routes list\n *\n * @param param\n * @returns {Router}\n */\nRouter.prototype.remove = function (param) {\n    var _this = this;\n    if (typeof param === \"string\") {\n        param = this._parseRouteRule(param).toString();\n    }\n    this.routes.some(function (route, i) {\n        if (route.handler === param || route.rule.toString() === param) {\n            _this.routes.splice(i, 1);\n            return true;\n        }\n        return false;\n    });\n\n    return this;\n};\n\n/**\n * Reset the state of Router\n *\n * @returns {Router}\n */\nRouter.prototype.reset = function () {\n    this.routes = [];\n    this.mode = null;\n    this.root = \"/\";\n    this._pageState = {};\n    this.removeUriListener();\n\n    return this;\n};\n\n/**\n * Add current page in history stack\n * @private\n */\nRouter.prototype._pushHistory = function () {\n    var _this = this,\n        fragment = this._getFragment();\n\n    if (this.mode === \"hash\") {\n        if (this._historyState === \"add\") {\n            if (this._historyIdx !== this._historyStack.length - 1) {\n                this._historyStack.splice(this._historyIdx + 1);\n            }\n\n            this._historyStack.push({\n                path: fragment,\n                state: _this._pageState\n            });\n\n            this._historyIdx = this._historyStack.length - 1;\n        }\n        this._historyState = \"add\";\n    }\n};\n\n/**\n *\n * @param asyncRequest boolean\n * @returns {PromiseResult<boolean> | boolean}\n * @private\n */\nRouter.prototype._unloadCallback = function (asyncRequest) {\n    var result;\n\n    if (this._skipCheck) {\n        return asyncRequest ? Promise.resolve(true) : true;\n    }\n\n    if (this._currentPage && this._currentPage.options && this._currentPage.options.unloadCb) {\n        result = this._currentPage.options.unloadCb(this._currentPage, asyncRequest);\n        if (!asyncRequest || result instanceof Promise) {\n            return result;\n        }\n        return result ? Promise.resolve(result) : Promise.reject(result);\n    } else {\n        return asyncRequest ? Promise.resolve(true) : true;\n    }\n};\n\n/**\n * Check if router has the action for current path\n *\n * @returns {boolean}\n * @private\n */\nRouter.prototype._findRoute = function () {\n    var _this = this,\n        fragment = this._getFragment();\n\n    return this.routes.some(function (route) {\n        var match = fragment.match(route.rule);\n        if (match) {\n            match.shift();\n            var query = _this._getQuery();\n            var page = new Router.Page(fragment, query, match, _this._pageState, route.options);\n\n            if (!_this.securityHook(page)) {\n                return false;\n            }\n\n            _this._currentPage = page;\n            if (_this._skipCheck) {\n                _this._skipCheck = false;\n                return true;\n            }\n            _this.beforeHook(page);\n            route.handler.apply(page, match);\n            _this._pageState = null;\n\n            window.onbeforeunload = function (ev) {\n                if (_this._unloadCallback(false)) {\n                    return;\n                }\n                ev.returnValue = true;\n                return true;\n            };\n\n            return true;\n        }\n        return false;\n    });\n};\n\n/**\n *\n */\nRouter.prototype._treatAsync = function () {\n    var result;\n\n    result = this._currentPage.options.unloadCb(this._currentPage, true);\n    if (!(result instanceof Promise)) {\n        result = result ? Promise.resolve(result) : Promise.reject(result);\n    }\n\n    result\n        .then(this._processUri.bind(this))\n        .catch(this._resetState.bind(this));\n};\n\n/**\n *\n * @private\n */\nRouter.prototype._resetState = function () {\n    this._skipCheck = true;\n    this.navigateTo(this._current, this._currentPage.state, true);\n};\n\n/**\n * Replace current page with new one\n */\nRouter.prototype._processUri = function () {\n    var fragment = this._getFragment(),\n        found;\n\n    this._current = fragment;\n    this._pushHistory();\n\n    found = this._findRoute.call(this);\n    if (!found) {\n        this._page404(fragment);\n    }\n};\n\n/**\n * Check the URL and execute handler for its route\n *\n * @returns {Router}\n */\nRouter.prototype.check = function () {\n    if (this._skipCheck) return this;\n\n    // if page has unload cb treat as promise\n    if (this._currentPage && this._currentPage.options && this._currentPage.options.unloadCb) {\n        this._treatAsync();\n    } else {\n        this._processUri();\n    }\n    return this;\n};\n\n/**\n * Add the URI listener\n *\n * @returns {Router}\n */\nRouter.prototype.addUriListener = function () {\n    if (this.mode === \"history\") {\n        window.onpopstate = this.check.bind(this);\n    } else {\n        window.onhashchange = this.check.bind(this);\n    }\n\n    return this;\n};\n\n/**\n * Remove the URI listener\n *\n * @returns {Router}\n */\nRouter.prototype.removeUriListener = function () {\n    window.onpopstate = null;\n    window.onhashchange = null;\n    return this;\n};\n\n/**\n * Redirect to a page with replace state\n *\n * @param {string} path\n * @param {object} state\n * @param {boolean} silent\n *\n * @returns {Router}\n */\nRouter.prototype.redirectTo = function (path, state, silent) {\n    path = this._trimSlashes(path) || \"\";\n    this._pageState = state || null;\n    this._skipCheck = !!silent;\n\n    if (this.mode === \"history\") {\n        history.replaceState(state, null, this.root + this._trimSlashes(path));\n        return this.check();\n    } else {\n        this._historyIdx--;\n        window.location.hash = path;\n    }\n    return this;\n};\n\n/**\n * Navigate to a page\n *\n * @param {string} path\n * @param {object} state\n * @param {boolean} silent\n *\n * @returns {Router}\n */\nRouter.prototype.navigateTo = function (path, state, silent) {\n    path = this._trimSlashes(path) || \"\";\n    this._pageState = state || null;\n    this._skipCheck = !!silent;\n\n    if (this.mode === \"history\") {\n        history.pushState(state, null, this.root + this._trimSlashes(path));\n        return this.check();\n    } else {\n        window.location.hash = path;\n    }\n    return this;\n};\n\n/**\n * Refresh page with recall route handler\n * @returns {Router}\n */\nRouter.prototype.refresh = function () {\n    if (!this._currentPage) {\n        return this;\n    }\n    var path = this._currentPage.uri + \"?\" + this._queryString;\n    return this.navigateTo(path, this._currentPage.state);\n};\n\n/**\n * Go Back in browser history\n * Simulate \"Back\" button\n *\n * @returns {Router}\n */\nRouter.prototype.back = function () {\n    if (this.mode === \"history\") {\n        window.history.back();\n        return this;\n    }\n\n    return this.go(this._historyIdx - 1);\n};\n\n/**\n * Go Forward in browser history\n * Simulate \"Forward\" button\n *\n * @returns {Router}\n */\nRouter.prototype.forward = function () {\n    if (this.mode === \"history\") {\n        window.history.forward();\n        return this;\n    }\n\n    return this.go(this._historyIdx + 1);\n};\n\n/**\n * Go to a specific history page\n *\n * @param {number} count\n * @returns {Router}\n */\nRouter.prototype.go = function (count) {\n    if (this.mode === \"history\") {\n        window.history.go(count);\n        return this;\n    }\n\n    var page = this._historyStack[count];\n    if (!page) {\n        return this;\n    }\n\n    this._historyIdx = count;\n    this._historyState = \"hold\";\n    return this.navigateTo(page.path, page.state);\n};\n\n\nexport default Router;"]}